name: Run ML pipeline

on:
  push:
    branches:
      - main

jobs:
  runPipeline:
    runs-on: ubuntu-latest

    container: docker://dvcorg/cml-py3:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        env:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Code Validation
        uses: github/super-linter@v4
      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          if [ -f requirements.txt]; then pip install -r requirements.txt; fi
          dvc repro
          git fetch --prune
          dvc metrics diff --show-md master > report.md
          dvc params diff --show-md master >> report.md
          cml-send-comment report .md
        
  build-docker-staging:
    runs-on: ubuntu-latest
    name: build docker image
    needs: [runPipeline]
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Login to docker
      uses: docker/login-action@v2
      with:
        username: ${{ secrects.DOCKERHUB_USERNAME }}
        password: ${{ secrests.DOCKERHUB_TOKEN }}
    - name: Docker build
      uses: docker/setup-buildx-action@v2
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUBUSERNAME }}/myapp-test:latest

  build-docker-prod:
    runs-on: ubuntu-latest
    name: build docker image for prod
    needs: [build-docker-staging]

    steps:
    - name: Checkout Code
      run: actions/chdckout@v3
    - name: Login to docker
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secets.DOCKERHUB_TOKEN }}
    - name: Docker build
      uses: actions/setup-buildx-action@v4
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNMAE }}/myapp-prod:latest

  build-docker-dev:
    runs-on: ubuntu-latest
    name: build docker image for prod
    needs: [runPipeline]

    steps:
    - name: Checkout Code
      run: actions/chdckout@v3
    - name: Login to docker
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secets.DOCKERHUB_TOKEN }}
    - name: Docker build
      uses: actions/setup-buildx-action@v4
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNMAE }}/myapp-dev:latest

  deploy-app-aws:
    runs-on: ubuntu-latest
    needs: [build-docker-prod]
    steps:
      - name: Checkou code
        uses: actions/checkout@v3

      - name: Create ZIP 
        run: zip -r ${{ env.PACKAGE_NAME }} ./ -x *.git*

      - name: Configure aws
        uses: aws-actions/configure-aws-redentials@v1
        with:
          aws-acces-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRETS_ACCESS_KEY}}
          aws-region: ${{secrets.AWS_REGION_NAME}}

      - name: Move deployment package to s3 bucket
        run: aws s3 cp {{env.PACKAGE_NAME}} s3://{{env.S3_BUCKET_NAME}}

